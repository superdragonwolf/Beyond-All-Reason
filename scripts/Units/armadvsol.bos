#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, solarbase, container;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, status, sunheading, unitheading;


lua_solarpoint() {
	return(0);
}

solarreturn(status, sunheading) {

	unitheading = get(HEADING);
	if (status==1) {
		turn container to y-axis 0-unitheading now;
		turn solarbase to x-axis <30> speed <12>;
		turn solarbase to y-axis sunheading*182 speed <25>;
	}

}



Create()
{
	dont-cache solarbase;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	call-script lua_solarpoint();
	return (0);
}

#define SMOKEPIECE base
#include "smokeunit_thread_nohit.h"

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode solarbase type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode solarbase type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode solarbase type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode solarbase type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}

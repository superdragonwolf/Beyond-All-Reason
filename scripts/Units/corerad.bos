#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare6,flare7, flare5, flare4, flare3, flare2, base, turret;

static-var  Static_Var_1, gun_1, last_fire, firstaim;

// Signal definitions
#define SIG_AIM				2


#define SMOKEPIECE base
#include "smokeunit_thread_nohit.h"

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
    firstaim = 1;
	spin turret around y-axis speed <22.0>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep 1000;
	start-script ExecuteRestoreAfterDelay();
}

Create()
{
	hide flare2;
	hide flare1;
	hide flare4;
	hide flare3;
	hide flare6;
	hide flare7;
	hide flare5;
	gun_1 = flare1;
	firstaim = 1;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script ExecuteRestoreAfterDelay();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	stop-spin turret around y-axis;
	turn turret to y-axis heading speed <250>;
	if (firstaim == 1) {
	  last_fire = (get GAME_FRAME) + 30;
	  firstaim = 0;
	}
	while (last_fire > (get GAME_FRAME)) {
		sleep 150;
		set CHANGE_TARGET to 1;
	}
	wait-for-turn turret around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		show flare1;
		sleep 50;
		hide flare1;
	}
	if( gun_1 == 1 )
	{
		show flare2;
		sleep 50;
		hide flare2;
	}
	if( gun_1 == 2 )
	{
		show flare3;
		sleep 50;
		hide flare3;
	}
	if( gun_1 == 3 )
	{
		show flare4;
		sleep 50;
		hide flare4;
	}
	if( gun_1 == 4 )
	{
		show flare5;
		sleep 50;
		hide flare5;
	}
	if( gun_1 == 5 )
	{
		show flare6;
		sleep 50;
		hide flare6;
	}
	if( gun_1 == 6 )
	{
		show flare7;
		sleep 50;
		hide flare7;
	}
	++gun_1;
	if( gun_1 == 7 )
	{
		gun_1 = flare1;
	}
}

QueryPrimary(piecenum)
{
	piecenum = gun_1;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode flare1 type BITMAPONLY | NOHEATCLOUD;
		explode flare2 type BITMAPONLY | NOHEATCLOUD;
		explode flare3 type BITMAPONLY | NOHEATCLOUD;
		explode flare5 type BITMAPONLY | NOHEATCLOUD;
		explode flare4 type BITMAPONLY | NOHEATCLOUD;
		explode flare6 type BITMAPONLY | NOHEATCLOUD;
		explode flare7 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode flare1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare2 type FALL | NOHEATCLOUD;
		explode flare3 type FALL | NOHEATCLOUD;
		explode flare5 type FALL | NOHEATCLOUD;
		explode flare4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare6 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare7 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode flare1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode flare2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode flare3 type SMOKE | FALL | NOHEATCLOUD;
		explode flare5 type SMOKE | FALL | NOHEATCLOUD;
		explode flare4 type SMOKE | FALL | NOHEATCLOUD;
		explode flare6 type SMOKE | FALL | NOHEATCLOUD;
		explode flare7 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;

		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare5 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare4 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare6 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare7 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
